version: "3.2"

services:
  bj-decoupage-territorial-mysql:
    build: ./mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    container_name: bj-decoupage-territorial-mysql
    healthcheck:
      interval: 300s
      timeout: 400s
      retries: 10

    # We'd like to be able to access our data files on our local filesystem
    volumes:
      - ./log/mysql:/var/log/mysql
      
    environment:
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'decoupage_territorial_benin'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'decoupage_territorial_benin'
      MYSQL_DATABASE: 'decoupage_territorial_benin'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'decoupage_territorial_benin'

  bj-decoupage-territorial-api:
    image: bj-decoupage-territorial-api
    container_name: bj-decoupage-territorial-api
    restart: unless-stopped
    # We specify the image for this service and where we can build that image from
    build:
      context: ./api
      dockerfile: Dockerfile

    env_file:
      ./api/.env
    environment:
      - PORT=3333
      - HOST=0.0.0.0
      - NODE_ENV=development
      - APP_KEY=MdWBJpbs-MJxm_zd3u9Y-cg_9tD9y4MM
      - DRIVE_DISK=local

      #MySQL connection
      - DB_CONNECTION=mysql
      - MYSQL_HOST=bj-decoupage-territorial-mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=decoupage_territorial_benin
      - MYSQL_PASSWORD=decoupage_territorial_benin
      - MYSQL_DB_NAME=decoupage_territorial_benin
      
      - CACHE_VIEWS=false

    # We can use these volumes to specify where we want our files to be accessible at.
    # It's best to house all node modules on a separate volume
    # volumes:
    #  - "./:/app"
    #  - "./node_modules"
    ports:
      - "3333:3333"
    depends_on:
      - bj-decoupage-territorial-mysql